<?php
/**
 * Term breadcrumb item locator
 *
 * @package carbon-breadcrumbs
 */

/**
 * Taxonomy term breadcrumb item locator class.
 *
 * Used to locate the breadcrumb items for taxonomy terms.
 */
class Carbon_Breadcrumb_Locator_Term extends Carbon_Breadcrumb_Locator_Hierarchical {

	/**
	 * Whether this the items of this locator should be included in the trail.
	 *
	 * @access public
	 *
	 * @return bool $is_included Whether the found items should be included.
	 */
	public function is_included() {
		$queried_object = get_queried_object();

		if ( ! empty( $queried_object->taxonomy ) && $queried_object->taxonomy == $this->get_subtype() ) {
			return true;
		}

		return false;
	}

	/**
	 * Retrieve the items, found by this locator.
	 *
	 * @access public
	 *
	 * @param int $priority The priority of the located items.
	 * @param int $term_id The term ID, used to go up the taxonomy term tree.
	 * @return Carbon_Breadcrumb_Item[] $items The items, found by this locator.
	 */
	public function get_items( $priority = 1000, $term_id = 0 ) {
		// Get the current term ID, if not specified.
		if ( ! $term_id ) {
			$term_id = get_queried_object_id();
		}

		// Walk the tree of ancestors of the taxonomy term up to the top.
		return $this->get_item_hierarchy( $term_id, $priority );
	}

	/**
	 * Generate a set of breadcrumb items that found by this locator type and any subtype.
	 * Will generate all necessary breadcrumb items of all taxonomies.
	 *
	 * @access public
	 *
	 * @return array $items The items, generated by this locator.
	 */
	public function generate_items() {
		$taxonomies = get_taxonomies(
			array(
				'public' => true,
			)
		);

		return $this->generate_items_for_subtypes( $taxonomies );
	}

	/**
	 * Get the parent ID of a specific term ID
	 *
	 * @access public
	 *
	 * @param int $id The ID of the term to retrieve the parent of.
	 * @return int $parent The parent ID.
	 */
	public function get_parent_id( $id ) {
		$term = get_term_by( 'id', $id, $this->get_subtype() );
		return $term->parent;
	}

}
